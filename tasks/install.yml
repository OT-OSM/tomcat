---
# tasks
- name: Downloading apache-tomcat-{{ tomcat_version }}.tar.gz
  get_url:
    url: "{{ tomcat_downloadURL }}/tomcat/tomcat-{{ tomcat_version.split('.')[0] }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ tomcat_install_path }}"

- name: Create tomcat group
  group:
    name: "{{ tomcat_group }}"
    state: present

- name: Create tomcat user
  user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    state: present

- name: Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}
  unarchive:
    src: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ tomcat_install_path }}"
    remote_src: true
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    creates: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"


- name: Removing unwanted files from apache-tomcat-{{ tomcat_version }}
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/NOTICE"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/RELEASE-NOTES"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/RUNNING.txt"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/LICENSE"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/temp/safeToDelete.tmp"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/docs"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/examples"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/host-manager"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/manager"
    - "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/ROOT"
  no_log: false

- name: Create directory for tomcat
  file:
    path: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/webapps/ROOT"
    state: directory

- name: Creating a tomcat log folder in /var/log directory
  file:
    path: "{{ tomcat_log_path }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
